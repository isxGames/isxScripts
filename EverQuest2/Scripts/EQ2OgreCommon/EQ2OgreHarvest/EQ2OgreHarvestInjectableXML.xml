<?xml version="1.0" encoding="UTF-8"?>
<ISUI>
	<Template Name='chkbox' template='checkbox'><Width>30</Width><Height>23</Height></Template>
	<Text name='LoadVariables' template='Text'>
		<X>1</X>
		<Y>1</Y>
		<Width>1</Width>
		<Height>1</Height>
		<Visible>0</Visible>
		<Alignment>Left</Alignment>
		<Text></Text>
		<OnLoad>
			declarevariable EQ2OgreHarvestLoaded bool global
			declarevariable EQ2OgreHarvestOptionsChanged bool global
			EQ2OgreHarvestLoaded:Set[TRUE]
			EQ2OgreHarvestOptionsChanged:Set[FALSE]
		</OnLoad>
		<OnUnLoad>
			deletevariable EQ2OgreHarvestLoaded
			deletevariable EQ2OgreHarvestOptionsChanged
		</OnUnLoad>
	</Text>


	<Text name='TextEQ2OgreHarvestBot' template='Text'>
		<X>255</X>
		<Y>10</Y>
		<Width>350</Width>
		<Height>20</Height>
		<Alignment>Left</Alignment>
		<Font>
			<Color>FFBB0055</Color>
			<Size>20</Size>
		</Font>
		<Text>Ogre Harvest Bot</Text>
		<OnLoad>
			
		</OnLoad>
	</Text>
	<Text name='TextWhatToHarvest' template='Text'>
		<X>12</X>
		<Y>12</Y>
		<Width>350</Width>
		<Height>20</Height>
		<Text>Harvest:</Text>
	</Text>
	<checkbox name='chkboxOre' template='chkbox'>
		<X>12</X>
		<Y>32</Y>
		<Text>Ore</Text>
		<OnLoad>
			declarevariable ChkBoxOreID int global
			ChkBoxOreID:Set[${This.ID}]
		</OnLoad>
		<OnUnLoad>
			deletevariable ChkBoxOreID
		</OnUnLoad>
		<OnLeftClick>
      EQ2OgreHarvestOptionsChanged:Set[TRUE]
    </OnLeftClick>
	</checkbox>
	<checkbox name='chkboxGems' template='chkbox'>
		<X>12</X>
		<Y>52</Y>
		<Text>Gems</Text>
		<OnLoad>
			declarevariable ChkBoxGemsID int global
			ChkBoxGemsID:Set[${This.ID}]
		</OnLoad>
		<OnUnLoad>
			deletevariable ChkBoxGemsID
		</OnUnLoad>
		<OnLeftClick>
      EQ2OgreHarvestOptionsChanged:Set[TRUE]
    </OnLeftClick>
	</checkbox>
	<checkbox name='chkboxWood' template='chkbox'>
		<X>12</X>
		<Y>72</Y>
		<Text>Wood</Text>
		<OnLoad>
			declarevariable ChkBoxWoodID int global
			ChkBoxWoodID:Set[${This.ID}]
		</OnLoad>
		<OnUnLoad>
			deletevariable ChkBoxWoodID
		</OnUnLoad>
		<OnLeftClick>
      EQ2OgreHarvestOptionsChanged:Set[TRUE]
    </OnLeftClick>
	</checkbox>
	<checkbox name='chkboxRoots' template='chkbox'>
		<X>12</X>
		<Y>92</Y>
		<Text>Roots</Text>
		<OnLoad>
			declarevariable ChkBoxRootsID int global
			ChkBoxRootsID:Set[${This.ID}]
		</OnLoad>
		<OnUnLoad>
			deletevariable ChkBoxRootsID
		</OnUnLoad>
		<OnLeftClick>
      EQ2OgreHarvestOptionsChanged:Set[TRUE]
    </OnLeftClick>
	</checkbox>
	<checkbox name='chkboxDens' template='chkbox'>
		<X>12</X>
		<Y>112</Y>
		<Text>Dens</Text>
		<OnLoad>
			declarevariable ChkBoxDensID int global
			ChkBoxDensID:Set[${This.ID}]
		</OnLoad>
		<OnUnLoad>
			deletevariable ChkBoxDensID
		</OnUnLoad>
		<OnLeftClick>
      EQ2OgreHarvestOptionsChanged:Set[TRUE]
    </OnLeftClick>
	</checkbox>
	<checkbox name='chkboxShrubs' template='chkbox'>
		<X>12</X>
		<Y>132</Y>
		<Text>Shrubs</Text>
		<OnLoad>
			declarevariable ChkBoxShrubsID int global
			ChkBoxShrubsID:Set[${This.ID}]
		</OnLoad>
		<OnUnLoad>
			deletevariable ChkBoxShrubsID
		</OnUnLoad>
		<OnLeftClick>
      EQ2OgreHarvestOptionsChanged:Set[TRUE]
    </OnLeftClick>
	</checkbox>
	<checkbox name='chkboxFish' template='chkbox'>
		<X>12</X>
		<Y>152</Y>
		<Text>Fish</Text>
		<OnLoad>
			declarevariable ChkBoxFishID int global
			ChkBoxFishID:Set[${This.ID}]	
		</OnLoad>
		<OnUnLoad>
			deletevariable ChkBoxFishID
		</OnUnLoad>
		<OnLeftClick>
      EQ2OgreHarvestOptionsChanged:Set[TRUE]
    </OnLeftClick>
	</checkbox>
	<checkbox name='chkboxCollectibleQ' template='chkbox'>
		<X>12</X>
		<Y>172</Y>
		<Text>Collectible (?)</Text>
		<OnLoad>
			declarevariable ChkBoxCollectibleQID int global
			ChkBoxCollectibleQID:Set[${This.ID}]	
		</OnLoad>
		<OnUnLoad>
			deletevariable ChkBoxCollectibleQID
		</OnUnLoad>
		<OnLeftClick>
      EQ2OgreHarvestOptionsChanged:Set[TRUE]
    </OnLeftClick>
	</checkbox>
	<checkbox name='chkboxCollectibleE' template='chkbox'>
		<X>12</X>
		<Y>192</Y>
		<Text>Collectible (!)</Text>
		<OnLoad>
			declarevariable ChkBoxCollectibleEID int global
			ChkBoxCollectibleEID:Set[${This.ID}]	
		</OnLoad>
		<OnUnLoad>
			deletevariable ChkBoxCollectibleEID
		</OnUnLoad>
		<OnLeftClick>
      EQ2OgreHarvestOptionsChanged:Set[TRUE]
    </OnLeftClick>
	</checkbox>
	<checkbox name='chkboxPathMode' template='chkbox'>
		<X>225</X>
		<Y>32</Y>
		<Text>Path Mode</Text>
		<OnLoad>
			declarevariable ChkBoxPathModeID int global
			ChkBoxPathModeID:Set[${This.ID}]
		</OnLoad>
		<OnUnLoad>
			deletevariable ChkBoxPathModeID
		</OnUnLoad>
		<OnLeftClick>
      EQ2OgreHarvestOptionsChanged:Set[TRUE]
    </OnLeftClick>
	</checkbox>
	<checkbox name='chkboxLoopPathMode' template='chkbox'>
		<X>250</X>
		<Y>52</Y>
		<Text>Continous Loop</Text>
		<OnLoad>
			declarevariable ChkBoxLoopPathModeID int global
			ChkBoxLoopPathModeID:Set[${This.ID}]
		</OnLoad>
		<OnUnLoad>
			deletevariable ChkBoxLoopPathModeID
		</OnUnLoad>
		<OnLeftClick>
      EQ2OgreHarvestOptionsChanged:Set[TRUE]
    </OnLeftClick>
	</checkbox>
	<checkbox name='chkboxRoamMode' template='chkbox'>
		<X>225</X>
		<Y>72</Y>
		<Text>Roam Mode</Text>
		<OnLoad>
			declarevariable ChkBoxRoamModeID int global
			ChkBoxRoamModeID:Set[${This.ID}]
		</OnLoad>
		<OnUnLoad>
			deletevariable ChkBoxRoamModeID
		</OnUnLoad>
		<OnLeftClick>
      EQ2OgreHarvestOptionsChanged:Set[TRUE]
    </OnLeftClick>
	</checkbox>
	<TextEntry Name='TextEntryRoamDistance'>
		<X>250</X>
		<Y>92</Y>
		<Width>30</Width>
		<Height>15</Height>
		<MaxLength>4</MaxLength>
		<OnLoad>
			declarevariable TEBoxRoamDistanceID int global
			TEBoxRoamDistanceID:Set[${This.ID}]
		</OnLoad>
		<OnUnLoad>
			deletevariable TEBoxRoamDistanceID
		</OnUnLoad>
		<OnKeyDown>
      EQ2OgreHarvestOptionsChanged:Set[TRUE]
    </OnKeyDown>
	</TextEntry>
	<Text name='TextRoamDistance' template='Text'>
		<X>285</X>
		<Y>92</Y>
		<Width>150</Width>
		<Height>20</Height>
		<Alignment>Left</Alignment>
		<Text>Roam Distance</Text>
	</Text>
	<checkbox name='chkboxTetherMode' template='chkbox'>
		<X>225</X>
		<Y>112</Y>
		<Text>Tether Mode (Tether to starting position)</Text>
		<OnLoad>
			declarevariable ChkBoxTetherModeID int global
			ChkBoxTetherModeID:Set[${This.ID}]	
		</OnLoad>
		<OnUnLoad>
			deletevariable ChkBoxTetherModeID
		</OnUnLoad>
		<OnLeftClick>
      EQ2OgreHarvestOptionsChanged:Set[TRUE]
    </OnLeftClick>
	</checkbox>
	<TextEntry Name='TextEntryTetherDistance'>
		<X>250</X>
		<Y>132</Y>
		<Width>30</Width>
		<Height>15</Height>
		<MaxLength>4</MaxLength>
		<OnLoad>
			declarevariable TEBoxTetherDistanceID int global
			TEBoxTetherDistanceID:Set[${This.ID}]
		</OnLoad>
		<OnUnLoad>
			deletevariable TEBoxTetherDistanceID
		</OnUnLoad>
		<OnKeyDown>
      EQ2OgreHarvestOptionsChanged:Set[TRUE]
    </OnKeyDown>
	</TextEntry>
	<Text name='TextTetherDistance' template='Text'>
		<X>285</X>
		<Y>132</Y>
		<Width>150</Width>
		<Height>20</Height>
		<Alignment>Left</Alignment>
		<Text>Tether Distance</Text>
	</Text>
	<checkbox name='chkboxSkillUpOnlyMode' template='chkbox'>
		<X>225</X>
		<Y>172</Y>
		<visible>0</visible>
		<Text>Skill-up Only Mode</Text>
		<OnLoad>
			declarevariable ChkBoxSkillUpOnlyModeID int global
			ChkBoxSkillUpOnlyModeID:Set[${This.ID}]	
		</OnLoad>
		<OnUnLoad>
			deletevariable ChkBoxSkillUpOnlyModeID
		</OnUnLoad>
		<OnLeftClick>
      EQ2OgreHarvestOptionsChanged:Set[TRUE]
    </OnLeftClick>
	</checkbox>
	<checkbox name='chkboxNoiseOnExit' template='chkbox'>
		<X>225</X>
		<Y>222</Y>
		<Text>Play Noise On Exit</Text>
		<OnLoad>
			declarevariable ChkBoxNoiseOnExitID int global
			ChkBoxNoiseOnExitID:Set[${This.ID}]	
		</OnLoad>
		<OnUnLoad>
			deletevariable ChkBoxNoiseOnExitID
		</OnUnLoad>
		<OnLeftClick>
      EQ2OgreHarvestOptionsChanged:Set[TRUE]
    </OnLeftClick>
	</checkbox>

	<Text name='TextOHNavPaths' template='Text'>
		<X>450</X>
		<Y>25</Y>
		<Width>150</Width>
		<Height>20</Height>
		<Alignment>Left</Alignment>
		<Text>Nav Paths</Text>
	</Text>
	<CommandButton Name="CmdOHRefreshNavPaths" template='Button'>
		<X>510</X>
		<Y>20</Y>
		<Width>90</Width>
		<Height>20</Height>
		<Text>Refresh list</Text>
		<Alignment>Center</Alignment>
		<OnLoad>
			declarevariable CmdOHRefreshNavPathsID int global
			CmdOHRefreshNavPathsID:Set[${This.ID}]
		</OnLoad>
		<OnUnLoad>
			deletevariable CmdOHRefreshNavPathsID
		</OnUnLoad>
		<OnLeftClick>
			if ${This.Text.NotEqual[Refreshing...]}
			{
				This:SetText[Refreshing...]
				runscript "${LavishScript.HomeDirectory}/Scripts/EQ2OgreHarvest/EQ2OgreHarvestController" "RefreshNavPaths"
			}
		</OnLeftClick>
	</CommandButton>
	<ComboBox Name='CboboxOHAddNavPath' template='ComboBox'>
		<X>450</X>
		<Y>40</Y>
		<Width>180</Width> 
		<Height>20</Height> 
		<FullHeight>180</FullHeight>
		<ButtonWidth>20</ButtonWidth>
		<ListBox>
			<Sort>Text</Sort>
		</ListBox>
		<OnLoad>
			declarevariable CboBoxOHAddNavPathID int global
			CboBoxOHAddNavPathID:Set[${This.ID}]
		</OnLoad>
		<OnUnLoad>
			deletevariable CboBoxOHAddNavPathID
		</OnUnLoad>
		<OnRightClick>
			This:ClearSelection
		</OnRightClick>
	</ComboBox>
	<CommandButton Name="CmdOHAddNavPath" template='Button'>
		<X>490</X>
		<Y>65</Y>
		<Width>90</Width>
		<Height>20</Height>
		<Text>Add Nav Path</Text>
		<Alignment>Center</Alignment>
		<OnLeftClick>
			if ${UIElement[${CboBoxOHAddNavPathID}].SelectedItem(exists)}
			{
				UIElement[${LstBoxOHNavPathsID}]:AddItem[${UIElement[${CboBoxOHAddNavPathID}].SelectedItem}]
			}
		</OnLeftClick>
	</CommandButton>
	<ListBox Name='lstboxOHNavPaths' template='ListBox'>
		<X>450</X>
		<Y>90</Y>
		<Width>170</Width>
		<Height>120</Height>
		<Sort>User</Sort>
		<OnRightClick>
			if ${This.SelectedItem.ID}
			{
				This:RemoveItem[${This.SelectedItem.ID}]
			}
		</OnRightClick>
		<OnLoad>
			declarevariable LstBoxOHNavPathsID int global
			LstBoxOHNavPathsID:Set[${This.ID}]
		</OnLoad>
		<OnUnLoad>
			deletevariable LstBoxOHNavPathsID
		</OnUnLoad>
		<OnRightDown>
		</OnRightDown>
	</ListBox>
	<Text name='TextOHRemoveNavPath' template='Text'>
		<X>490</X>
		<Y>210</Y>
		<Width>150</Width>
		<Height>20</Height>
		<Alignment>Left</Alignment>
		<Text>Right click to remove</Text>
	</Text>
	<CommandButton Name="CmdOHSaveNavPathList" template='Button'>
		<X>630</X>
		<Y>120</Y>
		<Width>40</Width>
		<Height>20</Height>
		<Text>Save</Text>
		<Alignment>Center</Alignment>
		<OnLeftClick>
			if ${This.Text.Equal[Save]}
			{
				This:SetText[Saving]
				runscript "${LavishScript.HomeDirectory}/Scripts/EQ2OgreHarvest/EQ2OgreHarvestController" "OHSaveNavPath"
			}
		</OnLeftClick>
		<OnLoad>
			declarevariable CmdOHSavePathID int global
			CmdOHSavePathID:Set[${This.ID}]
		</OnLoad>
		<OnUnLoad>
			deletevariable CmdOHSavePathID
		</OnUnLoad>
	</CommandButton>
	<CommandButton Name="CmdOHLoadNavPathList" template='Button'>
		<X>630</X>
		<Y>150</Y>
		<Width>40</Width>
		<Height>20</Height>
		<Text>Load</Text>
		<Alignment>Center</Alignment>
		<OnLeftClick>
			if ${This.Text.Equal[Load]}
			{
				This:SetText[Loading]
				runscript "${LavishScript.HomeDirectory}/Scripts/EQ2OgreHarvest/EQ2OgreHarvestController" "OHLoadNavPath"
			}
			
		</OnLeftClick>
		<OnLoad>
			declarevariable CmdOHLoadPathID int global
			CmdOHLoadPathID:Set[${This.ID}]
		</OnLoad>
		<OnUnLoad>
			deletevariable CmdOHLoadPathID
		</OnUnLoad>
	</CommandButton>
	<CommandButton Name="CmdOHClearNavPathList" template='Button'>
		<X>475</X>
		<Y>230</Y>
		<Width>130</Width>
		<Height>20</Height>
		<Text>Clear ALL Nav Points</Text>
		<Alignment>Center</Alignment>
		<OnLeftClick>
			UIElement[${LstBoxOHNavPathsID}]:ClearItems
		</OnLeftClick>
	</CommandButton>
	<CommandButton Name="CmdOHStart" template='Button'>
		<X>475</X>
		<Y>250</Y>
		<Width>130</Width>
		<Height>20</Height>
		<Text>Start Ogre Harvest</Text>
		<Alignment>Center</Alignment>
		<OnLeftClick>
			EQ2OgreHarvestStartingLocation:Set[${Me.ToActor.Loc}]
			runscript "${LavishScript.HomeDirectory}/Scripts/EQ2OgreHarvest/EQ2OgreHarvestMain"
			This:Hide
			UIElement[${CmdOHEndID}]:Show
		</OnLeftClick>
		<OnLoad>
			declarevariable EQ2OgreHarvestStartingLocation point3f global
			declarevariable CmdOHStartID int global
			CmdOHStartID:Set[${This.ID}]
		</OnLoad>
		<OnUnLoad>
			deletevariable CmdOHStartID
		</OnUnLoad>
	</CommandButton>
	<CommandButton Name="CmdOHEnd" template='Button'>
		<X>475</X>
		<Y>270</Y>
		<Width>130</Width>
		<Height>20</Height>
		<Text>End Ogre Harvest</Text>
		<Visible>0</Visible>
		<Alignment>Center</Alignment>
		<OnLeftClick>
			if ${Script[EQ2OgreHarvestMain]}
				endscript EQ2OgreHarvestMain
			This:Hide
			UIElement[${CmdOHStartID}]:Show
		</OnLeftClick>
		<OnLoad>
			declarevariable CmdOHEndID int global
			CmdOHEndID:Set[${This.ID}]
		</OnLoad>
		<OnUnLoad>
			deletevariable CmdOHEndID
		</OnUnLoad>
	</CommandButton>
	<CommandButton Name="SecondWindow" template='Button'>
		<visible>1</visible>
		<X>13</X>
		<Y>275</Y>
		<Width>130</Width>
		<Height>20</Height>
		<Text>Switch to Stats Window</Text>
		<Alignment>Center</Alignment>
		<OnLeftClick>
				ui -reload -skin EQ2-Green "${LavishScript.HomeDirectory}/Scripts/EQ2OgreHarvest/EQ2OgreHarvestStatsXML.xml"
				;If this wasn't injected into a custom UI, hide this window
				if ${UIElement[EQ2OgreHarvestShell](exists)}
					UIElement[EQ2OgreHarvestShell]:Hide
				Script[EQ2OgreHarvestMain].VariableScope.HarvestStatsOb:UpdateAll
		</OnLeftClick>
		<OnLoad>
			
		</OnLoad>
	</CommandButton>
</ISUI>

