<ISUI>
	<!-- Main UI Window -->
	<Window Name='bjauctionbot' Template='Window'>
		<X>20</X>
		<Y>20</Y>
		<Width>460</Width>
		<Height>360</Height>
		<Client Template="Window.Client" />
		<StorePosition>1</StorePosition>
		<Title>BJ Auction Bot               Version 1.00</Title> 
		<OnLoad>
		declarevariable statusvar string global
		declarevariable item1textvar string global
		declarevariable item2textvar string global
		declarevariable item1Linkvar string global
		declarevariable Item2Linkvar string global
		declarevariable Item1BidTextEntryVar string global
		declarevariable OptionalTextEntryVar string global
		
		declarevariable StartTimeRunning int global
		declarevariable DisplaySecondsRunning int global
		declarevariable DisplayMinutesRunning int global
		declarevariable DisplayHoursRunning int global
		
		declarevariable StartTime int global
		declarevariable DisplaySeconds int global
		declarevariable DisplayMinutes int global
		declarevariable DisplayHours int global

		echo ${Time}: Loading BJ Auction Bot
		statusvar:Set["Idle..."]
		item1Linkvar:Set["None"]
		Item2Linkvar:Set[None]
		Item1BidTextEntryVar:Set[ ]
		ui -reload -skin EQ2-Green "${LavishScript.HomeDirectory}/Scripts/eq2bjcommon/bjauction/ui/bjauctionsettingsXML.xml"
		ui -reload -skin EQ2-Green "${LavishScript.HomeDirectory}/Scripts/eq2bjcommon/bjauction/ui/bjauctionpreviewXML.xml"
		</OnLoad>
		<OnUnLoad>
		echo ${Time}: Unloading BJ Auction Bot
		echo .
		echo .
		</OnUnLoad>
		<TitleBar Template="Window.TitleBar">
			<X>0</X>
			<Y>0</Y>
			<Width>100%</Width>
			<Height>5%</Height>
			<Children>
				<Text Name="Title" Template="Window.TitleBar.Title">
					<Alignment>Left</Alignment>
				</Text>
				<Button Name="Minimize" Template="Window.TitleBar.Minimize">
					<X>85%</X>
					<Width>16</Width>
					<Height>16</Height>
				</Button>
				<CommandButton Name="Custom Quit Button" Template="Window.TitleBar.Close">
					<X>92%</X>
					<Width>16</Width>
					<Height>16</Height>
					<OnLeftClick>
						Script[BJAuction]:QueueCommand[call SaveSettings]
						if ${Script[bjauction](exists)}
							endscript bjauction
						ui -unload "${LavishScript.HomeDirectory}/Scripts/eq2bjcommon/bjauction/ui/bjauctionXML.xml"
						ui -unload "${LavishScript.HomeDirectory}/Scripts/eq2bjcommon/bjauction/ui/bjauctionsettingsXML.xml"
						ui -unload "${LavishScript.HomeDirectory}/Scripts/eq2bjcommon/bjauction/ui/bjauctionpreviewXML.xml"
					</OnLeftClick>
				</CommandButton>
			</Children>
		</TitleBar>
		
	<!-- Start of layout -->
	<Children>
		<Text name='Status' template='Text'>
		<X>10</X>
		<Y>10</Y>
		<Width>350</Width>
		<Height>20</Height>
		<Alignment>Left</Alignment>
		<Font>
			<Color>FFBE5522</Color>
			<Size>16</Size>
		</Font>
		<Text>Status:</Text>
		</Text>
		<Text name='StatusVariable' template='Text'>
		<X>60</X>
		<Y>10</Y>
		<Width>350</Width>
		<Height>20</Height>
		<Alignment>Left</Alignment>
		<Font>
			<Color>FFBE5522</Color>
			<Size>16</Size>
		</Font>
		<OnRender>
		This:SetText[${statusvar}]
		</OnRender>
		</Text>	
		<Text name='ChatChannelText' template='Text'>
		<X>10</X>
		<Y>40</Y>
		<Width>350</Width>
		<Height>20</Height>
		<Alignment>Left</Alignment>
		<Font>
			<Color>FFBE5522</Color>
			<Size>16</Size>
		</Font>
		<Text>Chat Channel:</Text>
		</Text>			
		<TextEntry Name='ChatChannel'>
		<X>90</X>
		<Y>40</Y>
		<Width>100</Width>
		<Height>20</Height>
		<Alignment>Center</Alignment>
		<Font>
			<Color>FFBE5522</Color>
			<Size>16</Size>
		</Font>
		<MaxLength>15</MaxLength>
		<OnLoad>
			declarevariable BJChannelName string global
			BJChannelName:Set[ ]
		</OnLoad>
		<OnChange>
			BJChannelName:Set[${This.Text}]
		</OnChange>
		</TextEntry>		
		<Text name='SellingTypeText' template='Text'>
		<X>200</X>
		<Y>40</Y>
		<Width>350</Width>
		<Height>20</Height>
		<Alignment>Left</Alignment>
		<Font>
			<Color>FFBE5522</Color>
			<Size>16</Size>
		</Font>
		<Text>Selling Phrase:</Text>
		</Text>		
		<combobox name='SellingTypeComboBox'>
		<X>290</X>
		<Y>40</Y>
		<Width>150</Width> 
		<Height>20</Height> 
               <FullHeight>200</FullHeight>
               <ButtonWidth>20</ButtonWidth>
		<Items>
		<Item Value='1' Default='1'>Please choose...</Item>
		<Item Value='2'>WTS</Item>
		<Item Value='3'>WTT</Item>
		<Item Value='4'>SLR</Item>
		<Item Value='5'>WTA</Item>
		</Items>
		<OnSelect>
			SellingTypeVar:Set[${UIElement[SellingTypeComboBox@bjauctionbot].SelectedItem.Text}]
		</OnSelect>
		<OnLoad>
			declarevariable SellingTypeVar string global ${This.ID}
		</OnLoad>
		</combobox>
		<Text name='BidTypeText' template='Text'>
		<X>10</X>
		<Y>70</Y>
		<Width>350</Width>
		<Height>20</Height>
		<Alignment>Left</Alignment>
		<Font>
			<Color>FFBE5522</Color>
			<Size>16</Size>
		</Font>
		<Text>Bid Type:</Text>
		</Text>	
		<combobox name='BidTypeComboBox'>
		<X>70</X>
		<Y>70</Y>
		<Width>150</Width> 
		<Height>20</Height> 
               <FullHeight>200</FullHeight>
               <ButtonWidth>20</ButtonWidth>
		<Items>
		<Item Value='1' Default='1'>Please choose...</Item>
		<Item Value='2'>MB</Item>
		<Item Value='3'>Minimum Bid</Item>
		<Item Value='4'>Min Bid</Item>
		<Item Value='5'>SB</Item>
		<Item Value='6'>Starting Bid</Item>
		<Item Value='7'>Starting At</Item>
		<Item Value='8'>Starting @</Item>
		<Item Value='9'>Current Bid</Item>
		<Item Value='10'>Currently At</Item>
		<Item Value='11'>Currently @</Item>
		<Item Value='12'>Price</Item>
		</Items>
		<OnSelect>
			BidTypeVar:Set[${UIElement[BidTypeComboBox@bjauctionbot].SelectedItem.Text}]
		</OnSelect>		
		<OnLoad>
			declarevariable BidTypeVar string global ${This.ID}
		</OnLoad>
		</combobox>		
		<checkbox name='EnableStartBidCheckbox'>
		<Font>
		<Name>EnableStartBidCheckbox</Name>
		<Size>30</Size>
		<Color>FF0000FF</Color>
		</Font>
		<visible>0</visible>
		<X>270</X>
		<Y>67</Y>	
		<Width>133</Width> 
		<Height>23</Height> 
		<OnLoad>
		declarevariable EnableStartBidCheckboxVar int global ${This.ID}
		EnableStartBidCheckboxVar:Set[${This.ID}]
		This.Parent.FindChild[EnableStartBidCheckbox]:SetChecked
		</OnLoad>
		</checkbox>
		<Text name='StartBidText' template='Text'>
		<X>297</X>
		<Y>70</Y>
		<Width>350</Width>
		<Height>20</Height>
		<Alignment>Left</Alignment>
		<Font>
			<Color>FFBE5522</Color>
			<Size>16</Size>
		</Font>
		<Text>Bid Type Amount:</Text>
		</Text>
		<TextEntry Name='StartBidTextEntry'>
		<X>400</X>
		<Y>70</Y>
		<Width>40</Width>
		<Height>20</Height>
		<Alignment>Center</Alignment>
		<Font>
			<Color>FFBE5522</Color>
			<Size>16</Size>
		</Font>
		<MaxLength>4</MaxLength>
		<OnLoad>
			declarevariable StartBidTextEntry string global
			StartBidTextEntry:Set[ ]
		</OnLoad>
		<OnChange>
			StartBidTextEntry:Set[${This.Text}]
		</OnChange>
		</TextEntry>
		<CommandButton Name="Item1ButtonSet" template='Button'>
		<X>10</X>
		<Y>100</Y>
		<Width>110</Width>
		<Height>20</Height>
		<Text>Set Item 1</Text>
		<Alignment>Center</Alignment>
		<OnLeftClick>
			item1textvar:Set[${ExamineItemWindow.ToItem.Name}]
			item1Linkvar:Set[${ExamineItemWindow.ToItem.ToLink}]
			This.Parent.FindChild[Item1ButtonReset]:Show
			This:Hide
		</OnLeftClick>
		<OnLoad>
			declarevariable item1buttonsetvar int global ${This.ID}
		</OnLoad>
		</CommandButton>
		<Text name='Item1Text' template='Text'>
		<X>130</X>
		<Y>100</Y>
		<Width>210</Width>
		<Height>20</Height>
		<Alignment>Center</Alignment>
		<Font>
			<Color>FFBE5522</Color>
			<Size>16</Size>
		</Font>
		<OnLoad>
			declarevariable item1textvar string global ${This.ID}
			item1textvar:Set["None"]
		</OnLoad>
		<OnRender>
				This:SetText[${item1textvar}]
				</OnRender>
		</Text>
		<CommandButton Name="Item1ButtonReset" template='Button'>
		<X>10</X>
		<Y>100</Y>
		<Width>110</Width>
		<Height>20</Height>
		<Text>Reset Item 1</Text>
		<Alignment>Center</Alignment>
		<visible>0</visible>
		<OnLeftClick>
			item1textvar:Set["None"]
			item1Linkvar:Set[ ]
			Item1BidTextEntryVar:Set[ ]
			UIElement[Item1BidTextEntry@bjauctionbot]:SetText[${Item1BidTextEntryVar}]
			This.Parent.FindChild[Item1ButtonSet]:Show
			This:Hide
		</OnLeftClick>
		<OnLoad>
			declarevariable item1buttonvar int global ${This.ID}
		</OnLoad>
		</CommandButton>
		<Text name='Item1BidText' template='Text'>
		<X>350</X>
		<Y>100</Y>
		<Width>350</Width>
		<Height>20</Height>
		<Alignment>Left</Alignment>
		<Font>
			<Color>FFBE5522</Color>
			<Size>16</Size>
		</Font>
		<Text>Amount:</Text>
		</Text>
		<TextEntry Name='Item1BidTextEntry'>
		<X>400</X>
		<Y>100</Y>
		<Width>40</Width>
		<Height>20</Height>
		<Alignment>Center</Alignment>
		<Font>
			<Color>FFBE5522</Color>
			<Size>16</Size>
		</Font>
		<MaxLength>4</MaxLength>
		<OnLoad>
			declarevariable Item1BidTextEntryVar string global
			Item1BidTextEntryVar:Set[ ]
		</OnLoad>
		<OnChange>
			Item1BidTextEntryVar:Set[${This.Text}]
		</OnChange>
		</TextEntry>
		
		<CommandButton Name="Item2ButtonSet" template='Button'>
		<X>10</X>
		<Y>130</Y>
		<Width>110</Width>
		<Height>20</Height>
		<Text>Set Item 2</Text>
		<Alignment>Center</Alignment>
		<OnLeftClick>
			Item2textvar:Set[${ExamineItemWindow.ToItem.Name}]
			Item2Linkvar:Set[${ExamineItemWindow.ToItem.ToLink}]
			This.Parent.FindChild[Item2ButtonReset]:Show
			This:Hide
		</OnLeftClick>
		<OnLoad>
			declarevariable Item2buttonsetvar int global ${This.ID}
		</OnLoad>
		</CommandButton>
		<Text name='Item2Text' template='Text'>
		<X>130</X>
		<Y>130</Y>
		<Width>210</Width>
		<Height>20</Height>
		<Alignment>Center</Alignment>
		<Font>
			<Color>FFBE5522</Color>
			<Size>16</Size>
		</Font>
		<OnLoad>
			declarevariable Item2textvar string global ${This.ID}
			Item2textvar:Set["None"]
		</OnLoad>
		<OnRender>
				This:SetText[${Item2textvar}]
				</OnRender>
		</Text>
		<CommandButton Name="Item2ButtonReset" template='Button'>
		<X>10</X>
		<Y>130</Y>
		<Width>110</Width>
		<Height>20</Height>
		<Text>Reset Item 2</Text>
		<Alignment>Center</Alignment>
		<visible>0</visible>
		<OnLeftClick>
			Item2textvar:Set["None"]
			Item2Linkvar:Set["None"]
			Item2BidTextEntry:Set[ ]
			UIElement[Item2BidTextEntry@bjauctionbot]:SetText[${Item2BidTextEntry}]
			This.Parent.FindChild[Item2ButtonSet]:Show
			This:Hide
		</OnLeftClick>
		<OnLoad>
			declarevariable Item2buttonvar int global ${This.ID}
		</OnLoad>
		</CommandButton>
		<Text name='Item2BidText' template='Text'>
		<X>350</X>
		<Y>130</Y>
		<Width>350</Width>
		<Height>20</Height>
		<Alignment>Left</Alignment>
		<Font>
			<Color>FFBE5522</Color>
			<Size>16</Size>
		</Font>
		<Text>Amount:</Text>
		</Text>
		<TextEntry Name='Item2BidTextEntry'>
		<X>400</X>
		<Y>130</Y>
		<Width>40</Width>
		<Height>20</Height>
		<Alignment>Center</Alignment>
		<Font>
			<Color>FFBE5522</Color>
			<Size>16</Size>
		</Font>
		<MaxLength>4</MaxLength>
		<OnLoad>
			declarevariable Item2BidTextEntry string global
			Item2BidTextEntry:Set[ ]
		</OnLoad>
		<OnChange>
			Item2BidTextEntry:Set[${This.Text}]
		</OnChange>
		</TextEntry>
		<checkbox name='EnableOptionalTextCheckbox'>
		<Font>
		<Name>EnableOptionalTextCheckbox</Name>
		<Size>30</Size>
		<Color>FF0000FF</Color>
		</Font>
		<X>10</X>
		<Y>177</Y>	
		<Width>133</Width> 
		<Height>23</Height> 
		<AutoTooltip>Enable/Disable optional text from being displayed</AutoTooltip>
		<OnLoad>
		declarevariable EnableOptionalTextCheckboxVar int global ${This.ID}
		EnableOptionalTextCheckboxVar:Set[${This.ID}]
		</OnLoad>
		</checkbox>		
		<Text name='OptionalText' template='Text'>
		<X>40</X>
		<Y>180</Y>
		<Width>350</Width>
		<Height>20</Height>
		<Alignment>Left</Alignment>
		<Font>
			<Color>FFBE5522</Color>
			<Size>16</Size>
		</Font>
		<Text>Optional Text:</Text>
		</Text>			
		<TextEntry Name='OptionalTextEntry'>
			<X>120</X>
			<Y>180</Y>
			<Width>200</Width>
			<Height>20</Height>
			<Alignment>Center</Alignment>
			<Font>
				<Color>FFBE5522</Color>
				<Size>16</Size>
			</Font>
			<MaxLength>30</MaxLength>
			<OnLoad>
				declarevariable OptionalTextEntryVar string global
				OptionalTextEntryVar:Set[]
			</OnLoad>
			<OnChange>
				OptionalTextEntryVar:Set[${This.Text}]
			</OnChange>
		</TextEntry>
		<CommandButton Name="GoingOnceButton" template='Button'>
		<X>330</X>
		<Y>160</Y>
		<Width>110</Width>
		<Height>20</Height>
		<Text>Going Once</Text>
		<Visible>0</Visible>
		<Alignment>Center</Alignment>
		<OnLeftClick>
			Script[BJAuction]:QueueCommand[call GoingOnce]
			if ${Script[bjauctiontimer](exists)}
			{	
				endscript bjauctiontimer
			} 
			runscript "${LavishScript.HomeDirectory}/Scripts/eq2bjcommon/bjauction/bjauctiontimer"
		</OnLeftClick>
		<OnLoad>
			declarevariable goingoncebuttonvar int global ${This.ID}
		</OnLoad>
		</CommandButton>
		<CommandButton Name="GoingTwiceButton" template='Button'>
		<X>330</X>
		<Y>180</Y>
		<Width>110</Width>
		<Height>20</Height>
		<Text>Going Twice</Text>
		<Visible>0</Visible>
		<Alignment>Center</Alignment>
		<OnLeftClick>
			Script[BJAuction]:QueueCommand[call GoingTwice]
			if ${Script[bjauctiontimer](exists)}
			{	
				endscript bjauctiontimer
			} 
			runscript "${LavishScript.HomeDirectory}/Scripts/eq2bjcommon/bjauction/bjauctiontimer"
		</OnLeftClick>
		<OnLoad>
			declarevariable goingtwicebuttonvar int global ${This.ID}
		</OnLoad>
		</CommandButton>
		<CommandButton Name="GoingSoldButton" template='Button'>
		<X>330</X>
		<Y>200</Y>
		<Width>110</Width>
		<Height>20</Height>
		<Text>Sold</Text>
		<Visible>0</Visible>
		<Alignment>Center</Alignment>
		<OnLeftClick>
			Script[BJAuction]:QueueCommand[call GoingSold]
			if ${Script[bjauctiontimer](exists)}
			{	
				endscript bjauctiontimer
			} 
			runscript "${LavishScript.HomeDirectory}/Scripts/eq2bjcommon/bjauction/bjauctiontimer"
		</OnLeftClick>
		<OnLoad>
			declarevariable goingsoldbuttonvar int global ${This.ID}
		</OnLoad>
		</CommandButton>		
		<CommandButton Name="GoingOnceButtonFake" template='Button'>
		<X>330</X>
		<Y>160</Y>
		<Width>110</Width>
		<Height>20</Height>
		<Text>Going Once</Text>
		<Alignment>Center</Alignment>
		<Alpha>0.2</Alpha>
		<OnLeftClick>

		</OnLeftClick>
		<OnLoad>
			declarevariable goingoncebuttonfakevar int global ${This.ID}
		</OnLoad>
		</CommandButton>
		<CommandButton Name="GoingTwiceButtonFake" template='Button'>
		<X>330</X>
		<Y>180</Y>
		<Width>110</Width>
		<Height>20</Height>
		<Text>Going Twice</Text>
		<Alignment>Center</Alignment>
		<Alpha>0.2</Alpha>
		<OnLeftClick>

		</OnLeftClick>
		<OnLoad>
			declarevariable goingtwicebuttonfakevar int global ${This.ID}
		</OnLoad>
		</CommandButton>
		<CommandButton Name="GoingSoldButtonFake" template='Button'>
		<X>330</X>
		<Y>200</Y>
		<Width>110</Width>
		<Height>20</Height>
		<Text>Sold</Text>
		<Alignment>Center</Alignment>
		<Alpha>0.2</Alpha>
		<OnLeftClick>

		</OnLeftClick>
		<OnLoad>
			declarevariable goingsoldbuttonfakevar int global ${This.ID}
		</OnLoad>
		</CommandButton>
		<Text name='AuctionRunningTimerText1' template='Text'>
		<X>40</X>
		<Y>230</Y>
		<Width>150</Width>
		<Height>20</Height>
		<Alignment>Center</Alignment>
		<Font>
			<Color>FFFFFF00</Color>
			<Size>24</Size>
		</Font>
		<Text>Auction Running</Text>
		</Text>	
		<Text name='AuctionRunningTimerText2' template='Text'>
		<X>40</X>
		<Y>250</Y>
		<Width>150</Width>
		<Height>20</Height>
		<Alignment>Center</Alignment>
		<Font>
			<Color>FFFFFF00</Color>
			<Size>24</Size>
		</Font>
		<Text>Time</Text>
		</Text>	
		<Text name='AuctionRunningTimerVariable' template='Text'>
		<X>40</X>
		<Y>280</Y>
		<Width>150</Width>
		<Height>20</Height>
		<Alignment>Center</Alignment>
		<Font>
			<Color>FFFFFF00</Color>
			<Size>20</Size>
		</Font>
		<OnRender>
		This:SetText[${DisplayHoursRunning.LeadingZeroes[2]}:${DisplayMinutesRunning.LeadingZeroes[2]}:${DisplaySecondsRunning.LeadingZeroes[2]}]
		</OnRender>
		<OnLoad>
		
		</OnLoad>
		</Text>
		<Text name='AuctionUpdateTimerText1' template='Text'>
		<X>250</X>
		<Y>230</Y>
		<Width>150</Width>
		<Height>20</Height>
		<Alignment>Center</Alignment>
		<Font>
			<Color>FFFFFF00</Color>
			<Size>24</Size>
		</Font>
		<Text>Time Since</Text>
		</Text>
		<Text name='AuctionUpdateTimerText2' template='Text'>
		<X>250</X>
		<Y>250</Y>
		<Width>150</Width>
		<Height>20</Height>
		<Alignment>Center</Alignment>
		<Font>
			<Color>FFFFFF00</Color>
			<Size>24</Size>
		</Font>
		<Text>Last Update</Text>
		</Text>	
		<Text name='AuctionUpdateTimerVariable' template='Text'>
		<X>250</X>
		<Y>280</Y>
		<Width>150</Width>
		<Height>20</Height>
		<Alignment>Center</Alignment>
		<Font>
			<Color>FFFFFF00</Color>
			<Size>20</Size>
		</Font>
		<OnRender>
		This:SetText[${DisplayHours.LeadingZeroes[2]}:${DisplayMinutes.LeadingZeroes[2]}:${DisplaySeconds.LeadingZeroes[2]}]
		</OnRender>
		</Text>		
		<CommandButton Name="StartButton" template='Button'>
		<X>10</X>
		<Y>310</Y>
		<Width>110</Width>
		<Height>20</Height>
		<Text>Start</Text>
		<Alignment>Center</Alignment>
		<OnLeftClick>
			runscript "${LavishScript.HomeDirectory}/Scripts/eq2bjcommon/bjauction/bjauction"
			runscript "${LavishScript.HomeDirectory}/Scripts/eq2bjcommon/bjauction/bjauctiontimer"
			echo ${Time}: Starting BJ Auction Bot
			This.Parent.FindChild[StopButton]:Show
			This.Parent.FindChild[UpdateButton]:Show
			This.Parent.FindChild[UpdateButtonFake]:Hide
			This.Parent.FindChild[GoingOnceButton]:Show
			This.Parent.FindChild[GoingOnceButtonFake]:Hide
			This.Parent.FindChild[GoingTwiceButton]:Show
			This.Parent.FindChild[GoingTwiceButtonFake]:Hide
			This.Parent.FindChild[GoingSoldButton]:Show
			This.Parent.FindChild[GoingSoldButtonFake]:Hide
			This.Parent.FindChild[EnableStartBidCheckbox]:Show
			This:Hide
		</OnLeftClick>
		<OnLoad>
			declarevariable startbuttonvar int global ${This.ID}
		</OnLoad>
		</CommandButton>
		<CommandButton Name="StopButton" template='Button'>
		<X>10</X>
		<Y>310</Y>
		<Width>110</Width>
		<Height>20</Height>
		<Text>Stop</Text>
		<Alignment>Center</Alignment>
		<visible>0</visible>
		<OnLeftClick>
			if ${Script[bjauction](exists)}
			{	
				endscript bjauction
			}
			This.Parent.FindChild[EnableStartBidCheckbox]:SetChecked
			This.Parent.FindChild[EnableStartBidCheckbox]:Hide
			This.Parent.FindChild[StartButton]:Show
			This.Parent.FindChild[UpdateButton]:Hide
			This.Parent.FindChild[UpdateButtonFake]:Show
			This.Parent.FindChild[GoingOnceButton]:Hide
			This.Parent.FindChild[GoingOnceButtonFake]:Show
			This.Parent.FindChild[GoingTwiceButton]:Hide
			This.Parent.FindChild[GoingTwiceButtonFake]:Show
			This.Parent.FindChild[GoingSoldButton]:Hide
			This.Parent.FindChild[GoingSoldButtonFake]:Show
			This:Hide
		</OnLeftClick>
		<OnLoad>
			declarevariable stopbuttonvar int global ${This.ID}
		</OnLoad>
		</CommandButton>
		<CommandButton Name="UpdateButton" template='Button'>
		<X>120</X>
		<Y>310</Y>
		<Width>110</Width>
		<Height>20</Height>
		<visible>0</visible>
		<Text>Update</Text>
		<Alignment>Center</Alignment>
		<OnLeftClick>
			Script[BJAuction]:QueueCommand[call Update]
			if ${Script[bjauctiontimer](exists)}
			{	
				endscript bjauctiontimer
			} 
			runscript "${LavishScript.HomeDirectory}/Scripts/eq2bjcommon/bjauction/bjauctiontimer"
		</OnLeftClick>
		<OnLoad>
			declarevariable updatebuttonvar int global ${This.ID}
		</OnLoad>
		</CommandButton>
		<CommandButton Name="UpdateButtonFake" template='Button'>
		<X>120</X>
		<Y>310</Y>
		<Width>110</Width>
		<Height>20</Height>
		<Text>Update</Text>
		<Alignment>Center</Alignment>
		<Alpha>0.2</Alpha>
		<OnLeftClick>

		</OnLeftClick>
		<OnLoad>
			declarevariable updatebuttonfakevar int global ${This.ID}
		</OnLoad>
		</CommandButton>		
		<CommandButton Name="ShowSettingsButton" template='Button'>
		<X>230</X>
		<Y>310</Y>
		<Width>110</Width>
		<Height>20</Height>
		<Text>Show Settings</Text>
		
		<Alignment>Center</Alignment>
		<OnLeftClick>
			UIElement[${bjauctionsettingsvar}]:Show
			This.Parent.FindChild[HideSettingsButton]:Show
			This:Hide
		</OnLeftClick>
		<OnLoad>
			declarevariable showsettingsbuttonvar int global ${This.ID}
		</OnLoad>
		</CommandButton>
		<CommandButton Name="HideSettingsButton" template='Button'>
		<X>230</X>
		<Y>310</Y>
		<Width>110</Width>
		<Height>20</Height>
		<Text>Hide Settings</Text>
		<Visible>0</Visible>
		<Alignment>Center</Alignment>
		<OnLeftClick>
			UIElement[${bjauctionsettingsvar}]:Hide
			This.Parent.FindChild[ShowSettingsButton]:Show
			This:Hide
		</OnLeftClick>
		<OnLoad>
			declarevariable hidesettingsbuttonvar int global ${This.ID}
		</OnLoad>
		</CommandButton>
		<CommandButton Name="ShowPreviewButton" template='Button'>
		<X>340</X>
		<Y>310</Y>
		<Width>110</Width>
		<Height>20</Height>
		<Text>Show Preview</Text>
		
		<Alignment>Center</Alignment>
		<OnLeftClick>
			UIElement[${bjauctionpreviewvar}]:Show
			This.Parent.FindChild[HidePreviewButton]:Show
			This:Hide
		</OnLeftClick>
		<OnLoad>
			declarevariable showpreviewbuttonvar int global ${This.ID}
		</OnLoad>
		</CommandButton>
		<CommandButton Name="HidePreviewButton" template='Button'>
		<X>340</X>
		<Y>310</Y>
		<Width>110</Width>
		<Height>20</Height>
		<Text>Hide Preview</Text>
		<Visible>0</Visible>
		<Alignment>Center</Alignment>
		<OnLeftClick>
			UIElement[${bjauctionpreviewvar}]:Hide
			This.Parent.FindChild[ShowPreviewButton]:Show
			This:Hide
		</OnLeftClick>
		<OnLoad>
			declarevariable hidepreviewbuttonvar int global ${This.ID}
		</OnLoad>
		</CommandButton>		
	</Children>			
  </Window>
</ISUI>